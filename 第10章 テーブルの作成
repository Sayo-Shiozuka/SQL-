//10-1 家計簿テーブルを作成する
CREATE TABLE 家計簿 (
  日付　        DATE,
  費目ID       INTEGER,
  メモ          VARCHAR(100),
  入金額        INTEGER,
  出金額        INTEGER
)

//10-2 家計簿テーブルに対する行の追加
INSERT INTO 家計簿(日付, メモ, 出金額)
VALUES ('2018-04-12', '詳細は後で', 60000)

//10-3 家計簿テーブルを作成する(デフォルト値を活用)
CREATE TABLE 家計簿 (
  日付        DATE,
  費目ID      INTEGER,
  メモ        VARCHAR(100) DEFAULT '不明',
  入金額      INTEGER      DEFAULT 0,
  出金額      INTEGER      DEFAULT 0
)

//10-4 列の追加と削除
-- 追加するとき
ALTER TABLE 家計簿 ADD 関連日 DATE;
-- 削除するとき
ALTER TABLE 家計簿 DROP 関連日;

//10-5 基本的な3つの制約を活用
CREATE TABLE 家計簿 (
  日付 DATE NOT NULL,
  費目ID INTEGER,
  メモ VARCHAR(100) DEFAULT '不明' NOT NULL,
  入金額 INTEGER DEFAULT 0 CHECK(入金額 >= 0),
  出金額 INTEGER DEFAULT 0 CHECK(出金額 >= 0)
);
CREATE TABLE 費目 (
  ID INTEGER,
  名前 VARCHAR(40) UNIQUE
)

//10-6 デフォルト値が設定されていれば、エラーにならない
-- メモを明示的に指定して、INSERT → '家賃'が入る
INSERT INTO 家計簿 (日付, 費目ID, メモ, 入金額, 出金額)
VALUES('2018-04-04', 2, '家賃', 0, 60000);
--メモを省略してINSERT → '不明' が入る
INSERT INTO 家計簿 (日付, 費目ID, 入金額, 出金額)
VALUES('2018-04-05', 3, 0, 1350);

//10-7 主キー制約の指定（1）
CREATE TABLE 費目 (
  ID INTEGER PRIMARY KEY,
  名前 VARCHAR(40) UNIQUE
)

//10-8 主キー制約の指定（2）
CREATE TABLE 費目 (
  ID INTEGER,
  名前 VARCHAR(40) UNIQUE,
  PRIMARY KEY(ID, 名前)
)

//10-9 参照整合性制約を崩す例
-- 家計簿テーブルで利用中の費目について、費目テーブルから削除
DELETE FROM 費目 WHERE ID = 2;
-- 家計簿テーブルで利用中の費目について、費目のテーブルのIDを変更
UPDATE 費目 SET ID = 5 WHERE ID = 1;
-- 家計簿テーブルに行を追加する際、費目テーブルに存在しない費目を指定
INSERT INTO 家計簿 (日付, 費目ID, 入金額, 出金額)
VALUES ('2018-04-06', 99, 0, 800);
--家計簿テーブルの行を更新する際、費目テーブルに存在しない費目を指定
UPDATE 家計簿 DET 費目ID = 99
WHERE 日付 = '2018-04-10';

//10-10 外部キー制約の指定
CREATE TABLE 家計簿 (
  日付 DATE NOT NULL,
  費目ID INTEGER REFERENCES 費目 (ID),
  メモ VARCHAR(100) DEFAULT '不明' NOT NULL,
  入金額 INTEGER DEFAULT 0 CHECK(入金額 >= 0),
  出金額 INTEGER DEFAULT 0 CHECK(出金額 >= 0)
)

//練習問題
//10-2
CREATE TABLE 学部 (
  ID CHAR(1) PRIMARY KEY, -- 学部を一意に特定する文字
  名前 VARCHAR(20) UNIQUE NONT NULL,  -- 学部の名前(必須、重複不可)
  備考 VARCHAR(100) DEFAULT '特になし' NOT NULL --　特にない場合は、'特になし'を設定
)

//10-3
CREATE TABLE 学生 (
  学籍番号 CHAR(8) PRIMARY KEY,
  名前 VARCHAR(30) NOT NULL,
  生年月日 DATE NOT NULL,
  血液型 CHAR(2) CHECK (
    血液型 IN ('A', 'B', 'C', 'AB') OR
    血液型 IS NULL
  ),
  学部ID CHAR(1) REFERENCES 学部(ID)
)