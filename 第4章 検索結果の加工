4-1 DISTINCTを使わないSELECT文
SELECT 入金額 FROM 家計簿

4-2 DISTINCTを使ったSELECT文
SELECT DISTINCT 入金額　　//DISTINCT = 重複行を除外する
FROM 家計簿

4-3 費目一覧の取得
SELECT DISTINCT 費目 FROM 家計簿

4-4 出金額で昇順となるよう並び替えて取得する
SELECT * FROM 家計簿
ORDER BY 出金額  //並び順はASCまたはDESC(省略するとASCと同じ意味)

4-5 日付で江潤となるよう並び替えて取得する
SELECT * FROM 家計簿
ORDER BY 日付 

4-6 複数の列で並び替える
SELECT * FROM 家計簿
ORDER BY 入金額 DESC, 出金額 DESC

4-7 列番号を指定するORDER BY 句
SELECT * FROM 家計簿
ORDER BY 4 DESC, 5 DESC

4-8 出金額の高い潤に3件を取得する
SELECT 費目, 出金額 FROM 家計簿
ORDER BY 出金額 DESC
OFFSET 0 ROWS
FETCH NEXT 3 ROWS ONLY

4-9 3番目に高い出金額だけを取得する
SELECT 費目, 出金額 FROM 家計簿
ORDER BY 出金額 DESC
OFFSET 2 ROWS
FETCH NEXT 1 ROWS ONLY

4-10 取得行を限定するそのほかの方法
-- LIMITの利用
  (Db2, MySQL, MariaDB, PostgreSQL, SQLite, H2, Database)
SELECT 費目, 出金額 FROM 家計簿
ORDER BY 出金額 DESC LIMIT 3  //OFFSETで読み飛ばす行数を指定することも可能

-- ROW_NUMBER()の利用 //指定条件での順序を返す命令
SELECT K.費目, K.出金額
FROM(
  SELECT *,
    ROW_NUMBER() OVER (ORDER BY 出金額 DESC) RN
  FROM 家計簿
) K
WHERE K.RN >= 1 AND K.RN <= 3

--ROWNUMの利用(Oracle DB)
SELECT 費目, 出金額
FROM(
  SELECT K.*, ROWNUM AS RN
  FROM(
    SELECT * FROM 家計簿
    ORDER BY 出金額 DESC
  )K
)
WHERE RN >= 1 AND RN <= 3

--TOPの利用(SQL Server)
SELECT TOP(3) 費目, 出金額 FROM 家計簿 ORDER BY 出金額 DESC

4-11 和集合を取得する
SELECT 費目, 入金額, 出金額 FROM 家計簿
UNION
SELECT 費目, 入金額, 出金額 FROM 家計簿アーカイブ
ORDER BY 2, 3, 1

4-12 差集合を取得する
SELECT 費目 FROM 家計簿
EXCEPT
SELECT 費目 FROM 家計簿アーカイブ

4-13 積集合を取得する
SELECT 費目 FROM 家計簿
INTERSECT
SELECT 費目 FROM 家計簿アーカイブ